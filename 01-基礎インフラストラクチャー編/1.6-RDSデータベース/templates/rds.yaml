AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step 6: RDS MySQL Database with Multi-AZ'

Parameters:
  ProjectName:
    Type: String
    Default: aws-practice
    Description: Name of the project
  
  EnvironmentName:
    Type: String
    Default: dev
    Description: Environment name

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID from previous step

  PrivateSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: Private subnet 1 ID for RDS

  PrivateSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Private subnet 2 ID for RDS

  DatabaseSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group ID for database

  DatabaseName:
    Type: String
    Default: webapp
    Description: Database name

  DatabaseUser:
    Type: String
    Default: admin
    Description: Database admin user

  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: Must contain only alphanumeric characters
    Default: MyPassword123
    Description: Database password (8-41 characters)

Resources:
  # DB Subnet Group
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${ProjectName}-${EnvironmentName}-db-subnet-group
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-db-subnet-group
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName

  # DB Parameter Group
  DatabaseParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: mysql8.0
      Description: Parameter group for MySQL 8.0
      Parameters:
        innodb_buffer_pool_size: '{DBInstanceClassMemory*3/4}'
        max_connections: 100
        slow_query_log: 1
        long_query_time: 2
        log_queries_not_using_indexes: 1
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-db-params
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName

  # RDS Database Instance
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceIdentifier: !Sub ${ProjectName}-${EnvironmentName}-mysql
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: '8.0.35'
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      DBName: !Ref DatabaseName
      AllocatedStorage: 20
      StorageType: gp2
      StorageEncrypted: true
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroupId
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      DBParameterGroupName: !Ref DatabaseParameterGroup
      BackupRetentionPeriod: 7
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "sun:04:00-sun:05:00"
      MultiAZ: false  # 開発環境では無効（本番では true にする）
      PubliclyAccessible: false
      EnablePerformanceInsights: false
      MonitoringInterval: 0
      DeletionProtection: false
      CopyTagsToSnapshot: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-mysql
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName

  # CloudWatch Log Group for RDS
  DatabaseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/instance/${ProjectName}-${EnvironmentName}-mysql/error
      RetentionInDays: 7

Outputs:
  DatabaseEndpoint:
    Description: Database endpoint
    Value: !GetAtt DatabaseInstance.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-Database-Endpoint

  DatabasePort:
    Description: Database port
    Value: !GetAtt DatabaseInstance.Endpoint.Port
    Export:
      Name: !Sub ${AWS::StackName}-Database-Port

  DatabaseName:
    Description: Database name
    Value: !Ref DatabaseName
    Export:
      Name: !Sub ${AWS::StackName}-Database-Name

  DatabaseUser:
    Description: Database user
    Value: !Ref DatabaseUser
    Export:
      Name: !Sub ${AWS::StackName}-Database-User