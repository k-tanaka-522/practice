AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step 5: Application Load Balancer'

Parameters:
  ProjectName:
    Type: String
    Default: aws-practice
    Description: Name of the project
  
  EnvironmentName:
    Type: String
    Default: dev
    Description: Environment name

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID from previous step

  PublicSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: Public subnet 1 ID for ALB

  PublicSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Public subnet 2 ID for ALB

  ALBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group ID for ALB

  AutoScalingGroupName:
    Type: String
    Description: Auto Scaling Group name from previous step

Resources:
  # Application Load Balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${ProjectName}-${EnvironmentName}-alb
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
      SecurityGroups:
        - !Ref ALBSecurityGroupId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-alb
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName

  # Target Group
  WebServerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${ProjectName}-${EnvironmentName}-web-tg
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPCId
      TargetType: instance
      HealthCheckEnabled: true
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: 200
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-web-tg
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName

  # ALB Listener
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebServerTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  # Auto Scaling Group attachment to Target Group
  AutoScalingGroupTargetGroupAttachment:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroupName
      TargetGroupARNs:
        - !Ref WebServerTargetGroup
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300

Outputs:
  ApplicationLoadBalancerArn:
    Description: Application Load Balancer ARN
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: !Sub ${AWS::StackName}-ALB-ARN

  ApplicationLoadBalancerDNS:
    Description: Application Load Balancer DNS Name
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-ALB-DNS

  WebServerTargetGroupArn:
    Description: Web Server Target Group ARN
    Value: !Ref WebServerTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}-TargetGroup-ARN

  WebsiteURL:
    Description: Website URL
    Value: !Sub http://${ApplicationLoadBalancer.DNSName}
    Export:
      Name: !Sub ${AWS::StackName}-Website-URL