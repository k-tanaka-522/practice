# このテンプレートは、IAM初期設定のマスタースタックです
# 複数のネストされたスタックを統合管理し、包括的なIAM構成を実現します
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master stack for IAM initial setup - orchestrates nested stacks for comprehensive IAM configuration'

# パラメータセクション：スタック作成時に指定する値を定義
Parameters:
  # 環境名（dev/staging/prod）を指定
  # これによりリソース名にプレフィックスが付き、環境ごとに分離されます
  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name for resource tagging

  # プロジェクト名：全リソースの識別に使用
  ProjectName:
    Type: String
    Default: aws-learning
    Description: Project name for resource identification

  # ネストされたスタックのテンプレートを保存するS3バケット名
  # 事前に作成しておく必要があります
  TemplateBucketName:
    Type: String
    Description: S3 bucket containing nested stack templates
    Default: aws-learning-cfn-templates

  # S3バケット内のテンプレート格納場所のプレフィックス
  TemplateBucketPrefix:
    Type: String
    Description: Prefix for template location in S3
    Default: iam-setup/v1

  # MFA（多要素認証）の強制を有効にするかどうか
  # 本番環境では必ず'true'にすることを推奨
  EnableMFAEnforcement:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Whether to enforce MFA for all users

  # パスワードの最小文字数
  # セキュリティのため14文字以上を推奨
  PasswordPolicyMinLength:
    Type: Number
    Default: 14
    MinValue: 8
    MaxValue: 128
    Description: Minimum password length

  # パスワードの有効期限（日数）
  # 0を指定すると無期限になります
  MaxPasswordAge:
    Type: Number
    Default: 90
    MinValue: 0
    MaxValue: 365
    Description: Maximum password age in days (0 = no expiration)

# リソースセクション：実際に作成されるAWSリソースを定義
Resources:
  # アカウント全体のパスワードポリシーを設定するスタック
  # パスワードの複雑さ、有効期限、履歴などを管理
  PasswordPolicyStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      # S3に保存されたテンプレートのURLを動的に生成
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/${TemplateBucketPrefix}/password-policy.yaml
      Parameters:
        MinPasswordLength: !Ref PasswordPolicyMinLength
        MaxPasswordAge: !Ref MaxPasswordAge
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: IAM-PasswordPolicy

  # 基本的なIAMロールとポリシーを作成するスタック
  # MFA強制ポリシー、セキュリティ監査ロールなどを含む
  BaseIAMRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/${TemplateBucketPrefix}/base-iam-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        EnableMFAEnforcement: !Ref EnableMFAEnforcement
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: IAM-BaseRoles

  # IAMグループとユーザーを作成するスタック
  # 管理者、開発者、読み取り専用などのグループを作成
  # DependsOn: BaseIAMRolesStackが完了してから実行（MFAポリシーのARNが必要なため）
  IAMGroupsUsersStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: BaseIAMRolesStack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/${TemplateBucketPrefix}/iam-groups-users.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        # !GetAtt で他のスタックの出力値を参照
        MFAEnforcementPolicyArn: !GetAtt BaseIAMRolesStack.Outputs.MFAEnforcementPolicyArn
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: IAM-GroupsUsers

  # AWSサービス用のロールを作成するスタック
  # EC2、Lambda、ECSなどのサービスが使用するロール
  ServiceRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/${TemplateBucketPrefix}/service-roles.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: IAM-ServiceRoles

  # IAMアクティビティを監視するためのCloudTrailとアラートを設定
  # セキュリティ監視に重要なスタック
  IAMMonitoringStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucketName}/${TemplateBucketPrefix}/iam-monitoring.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        # !Sub で動的に文字列を生成（アカウントIDを含むユニークなバケット名）
        CloudTrailBucketName: !Sub ${ProjectName}-${EnvironmentName}-cloudtrail-${AWS::AccountId}
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: IAM-Monitoring

Outputs:
  AdminGroupArn:
    Description: ARN of the Administrator group
    Value: !GetAtt IAMGroupsUsersStack.Outputs.AdminGroupArn
    Export:
      Name: !Sub ${AWS::StackName}-AdminGroupArn

  DeveloperGroupArn:
    Description: ARN of the Developer group
    Value: !GetAtt IAMGroupsUsersStack.Outputs.DeveloperGroupArn
    Export:
      Name: !Sub ${AWS::StackName}-DeveloperGroupArn

  ReadOnlyGroupArn:
    Description: ARN of the ReadOnly group
    Value: !GetAtt IAMGroupsUsersStack.Outputs.ReadOnlyGroupArn
    Export:
      Name: !Sub ${AWS::StackName}-ReadOnlyGroupArn

  MFAEnforcementPolicyArn:
    Description: ARN of the MFA enforcement policy
    Value: !GetAtt BaseIAMRolesStack.Outputs.MFAEnforcementPolicyArn
    Export:
      Name: !Sub ${AWS::StackName}-MFAEnforcementPolicyArn

  CloudTrailLogGroupName:
    Description: CloudWatch Log Group for CloudTrail
    Value: !GetAtt IAMMonitoringStack.Outputs.CloudTrailLogGroupName
    Export:
      Name: !Sub ${AWS::StackName}-CloudTrailLogGroupName