AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS account password policy configuration following security best practices'

Parameters:
  MinPasswordLength:
    Type: Number
    Default: 14
    MinValue: 8
    MaxValue: 128
    Description: Minimum length for IAM user passwords

  MaxPasswordAge:
    Type: Number
    Default: 90
    MinValue: 0
    MaxValue: 365
    Description: Maximum password age in days (0 = no expiration)

  PasswordReusePrevention:
    Type: Number
    Default: 12
    MinValue: 1
    MaxValue: 24
    Description: Number of previous passwords to prevent reuse

Resources:
  # Custom resource to set account password policy
  PasswordPolicyFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-PasswordPolicyManager
      Description: Manages IAM account password policy
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt PasswordPolicyFunctionRole.Arn
      Timeout: 60
      Code:
        ZipFile: |
          import boto3
          import json
          import cfnresponse
          
          def handler(event, context):
              try:
                  iam = boto3.client('iam')
                  
                  if event['RequestType'] == 'Delete':
                      # Cannot delete password policy, only update it
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                      return
                  
                  # Update account password policy
                  response = iam.update_account_password_policy(
                      MinimumPasswordLength=int(event['ResourceProperties']['MinPasswordLength']),
                      RequireSymbols=True,
                      RequireNumbers=True,
                      RequireUppercaseCharacters=True,
                      RequireLowercaseCharacters=True,
                      AllowUsersToChangePassword=True,
                      MaxPasswordAge=int(event['ResourceProperties']['MaxPasswordAge']) if int(event['ResourceProperties']['MaxPasswordAge']) > 0 else None,
                      PasswordReusePrevention=int(event['ResourceProperties']['PasswordReusePrevention']),
                      HardExpiry=False
                  )
                  
                  responseData = {
                      'Message': 'Password policy updated successfully',
                      'MinLength': event['ResourceProperties']['MinPasswordLength']
                  }
                  
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
                  
              except Exception as e:
                  print(f"Error: {str(e)}")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {'Error': str(e)})

  PasswordPolicyFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-PasswordPolicyFunctionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: PasswordPolicyManagement
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:UpdateAccountPasswordPolicy
                  - iam:GetAccountPasswordPolicy
                Resource: '*'

  CustomPasswordPolicy:
    Type: Custom::PasswordPolicy
    Properties:
      ServiceToken: !GetAtt PasswordPolicyFunction.Arn
      MinPasswordLength: !Ref MinPasswordLength
      MaxPasswordAge: !Ref MaxPasswordAge
      PasswordReusePrevention: !Ref PasswordReusePrevention

  # CloudWatch alarm for password policy compliance
  PasswordPolicyComplianceAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-PasswordPolicyCompliance
      AlarmDescription: Alert when password policy is not compliant
      MetricName: PasswordPolicyCompliance
      Namespace: CWLogs
      Statistic: Average
      Period: 3600
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      TreatMissingData: breaching

Outputs:
  PasswordPolicyStatus:
    Description: Password policy configuration status
    Value: !GetAtt CustomPasswordPolicy.Message

  MinPasswordLength:
    Description: Configured minimum password length
    Value: !Ref MinPasswordLength
    Export:
      Name: !Sub ${AWS::StackName}-MinPasswordLength

  MaxPasswordAge:
    Description: Maximum password age in days
    Value: !Ref MaxPasswordAge
    Export:
      Name: !Sub ${AWS::StackName}-MaxPasswordAge