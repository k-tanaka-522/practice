name: Multi-Environment Deployment

on:
  push:
    branches:
      - main
      - develop
      - release/*
  pull_request:
    branches:
      - main
      - staging
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean

env:
  PROJECT_NAME: aws-practice
  AWS_REGION: ap-northeast-1

jobs:
  # テンプレートの検証
  validate:
    name: Validate CloudFormation Templates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Validate CloudFormation templates
        run: |
          find . -name "*.yaml" -o -name "*.yml" | grep -E "(cloudformation|cfn)" | while read template; do
            echo "Validating: $template"
            aws cloudformation validate-template --template-body file://"$template"
          done
      
      - name: Run cfn-lint
        run: |
          pip install cfn-lint
          find . -name "*.yaml" -o -name "*.yml" | grep -E "(cloudformation|cfn)" | xargs cfn-lint

  # セキュリティスキャン
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run cfn-nag
        run: |
          gem install cfn-nag
          find . -name "*.yaml" -o -name "*.yml" | grep -E "(cloudformation|cfn)" | xargs cfn_nag_scan --input-path

  # 開発環境へのデプロイ
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    environment: 
      name: dev
      url: ${{ steps.deploy.outputs.environment_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to Dev
        id: deploy
        run: |
          ./scripts/deploy.sh \
            --environment dev \
            --project ${{ env.PROJECT_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --template cloudformation/main-stack.yaml \
            --stack ${{ env.PROJECT_NAME }}-dev
      
      - name: Run smoke tests
        run: |
          echo "Running smoke tests for dev environment..."
          # ここで実際のスモークテストを実行
          
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          username: 'AWS Deploy Bot'
          text: 'Dev deployment ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ステージング環境へのデプロイ
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: startsWith(github.ref, 'refs/heads/release/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: 
      name: staging
      url: ${{ steps.deploy.outputs.environment_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_STAGING }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to Staging
        id: deploy
        run: |
          ./scripts/deploy.sh \
            --environment staging \
            --project ${{ env.PROJECT_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --template cloudformation/main-stack.yaml \
            --stack ${{ env.PROJECT_NAME }}-staging
      
      - name: Run integration tests
        run: |
          echo "Running integration tests for staging environment..."
          # ここで実際の統合テストを実行
          
      - name: Performance tests
        run: |
          echo "Running performance tests for staging environment..."
          # ここで実際のパフォーマンステストを実行
          
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          username: 'AWS Deploy Bot'
          text: 'Staging deployment ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # 本番環境へのデプロイ
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    environment: 
      name: prod
      url: ${{ steps.deploy.outputs.environment_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Pre-deployment checks
        run: |
          echo "Running pre-deployment checks..."
          # データベースバックアップの確認
          # 外部サービスの依存関係チェック
          # トラフィック量の確認
          
      - name: Deploy to Production
        id: deploy
        run: |
          ./scripts/deploy.sh \
            --environment prod \
            --project ${{ env.PROJECT_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --template cloudformation/main-stack.yaml \
            --stack ${{ env.PROJECT_NAME }}-prod
      
      - name: Post-deployment verification
        run: |
          echo "Running post-deployment verification..."
          # ヘルスチェック
          # 主要機能のテスト
          # メトリクスの確認
          
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          username: 'AWS Deploy Bot'
          text: 'Production deployment ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ロールバック
  rollback:
    name: Rollback
    runs-on: ubuntu-latest
    if: failure() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/'))
    needs: [deploy-staging, deploy-prod]
    environment: 
      name: rollback
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Rollback to previous version
        run: |
          echo "Rolling back to previous version..."
          # 前のバージョンへのロールバック処理
          
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: 'warning'
          channel: '#deployments'
          username: 'AWS Deploy Bot'
          text: 'Rollback initiated due to deployment failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # コスト分析
  cost-analysis:
    name: Cost Analysis
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-prod]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Generate cost report
        run: |
          echo "Generating cost analysis report..."
          # コスト分析レポートの生成
          
      - name: Upload cost report
        uses: actions/upload-artifact@v4
        with:
          name: cost-analysis-report
          path: cost-report.json